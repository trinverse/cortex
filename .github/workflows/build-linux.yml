name: Build Linux Release

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag to upload to'
        required: true
        default: 'v0.1.1'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Install cross-compilation tools for ARM64
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu
      
      - name: Build release binary
        run: |
          if [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
            export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc
            export CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc
            export CXX_aarch64_unknown_linux_gnu=aarch64-linux-gnu-g++
          fi
          cargo build --release --target ${{ matrix.target }}
      
      - name: Create tarball
        run: |
          mkdir -p dist
          # Use simplified naming for x86_64 Linux to match existing format
          if [ "${{ matrix.target }}" = "x86_64-unknown-linux-gnu" ]; then
            tar czf dist/cortex-${{ github.event.inputs.release_tag }}-x86_64-linux.tar.gz \
              -C target/${{ matrix.target }}/release cortex
          else
            tar czf dist/cortex-${{ github.event.inputs.release_tag }}-${{ matrix.target }}.tar.gz \
              -C target/${{ matrix.target }}/release cortex
          fi
      
      - name: Upload to release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          if [ "${{ matrix.target }}" = "x86_64-unknown-linux-gnu" ]; then
            gh release upload ${{ github.event.inputs.release_tag }} \
              dist/cortex-${{ github.event.inputs.release_tag }}-x86_64-linux.tar.gz \
              --clobber
          else
            gh release upload ${{ github.event.inputs.release_tag }} \
              dist/cortex-${{ github.event.inputs.release_tag }}-${{ matrix.target }}.tar.gz \
              --clobber
          fi